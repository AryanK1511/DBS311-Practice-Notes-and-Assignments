Q1) In the employees collection, using Mongo query display all the employee ids and emails.
Ans) db.employees.find({}, {"employee_id": 1, "email": 1,"_id": 0})

Q2) In the product collection, display all the product id, product name and list price
Ans) db.products.find({}, {"product_id": 1, "product_name": 1, "list_price": 1, "_id": 0})

Q3) In the employees collection, using Mongo query display all the employee ids, emails and manager id whose manger ids are 1,3,9.
Ans) db.employees.find({"manager_id": {"$in": [1, 3, 9]}}, {"employee_id": 1, "email": 1, "manager_id": 1, "_id": 0})

Q4) In the product collection, display all the product id, product name and list price whose list price are in range between 500 to 600
Ans) db.products.find({"list_price": {"$gte": 500, "$lte": 600}}, {"product_id": 1, "product_name": 1, "list_price": 1, "_id": 0})

Q5) In the employees collection, using Mongo query display all the employee ids, hire date and first name who are hired in August 2015.
Ans) db.employees.find({ $expr: { $eq: [ { $month: "$hire_date" }, 8] } }, { "employee_id": 1, "hire_date": 1, "first_name": 1, "_id": 0 })

Q6) In the product collection, display all the product id, product name and standard cost whose standard cost are NOT in the range between 800 to 1000
Ans) db.products.find({"$or": [{"standard_cost": {"$lt": 800}}, {"standard_cost": {"$gt": 1000}}]}, {"product_id": 1, "product_name": 1, "standard_cost": 1, "_id": 0})

Q7) In the employees collection, using Mongo query display all the data except email,_id, phone and job title.
Ans) db.employees.find({}, {"email": 0, "_id": 0, "phone": 0, "job_title": 0})

Q8) In the product collection, display all the product id, product name and standard cost where products are in the list of ids (5,8,9,30,50,70,80) or the list price is above 1000
Ans) db.products.find({"$or": [{"product_id": {"$in": [5, 8, 9, 30, 50, 70, 80]}}, {"list_price": {"$gt": 1000}}]}, {"product_id": 1, "product_name": 1, "standard_cost": 1, "_id": 0})

Q9) In the product collection, update product ids 1,3 and 5 to have a new key/value pair quantity as 100 and their new list price as 1000, once updated display those product ids, product name and list price
Ans) db.products.updateMany({"product_id": {"$in": [1, 3, 5]}}, {"$set": {"quantity": 100, "list_price": 1000}})

Q10) Write an aggregate statement to sort the documents in the grades collection based on student ID and class ID. Display only the student ID and the class ID for each document. Sort the result from high to low values for student ID and from low to high for class ID.
Ans) db.grades.find({}, {"student_id": 1, "class_id": 1, "_id": 0}).sort({"student_id": -1, "class_id": 1})
OR db.grades.aggregate({"$sort": {"student_id": -1, "class_id": 1}}, {"$project": {"_id": 0, "student_id": 1, "class_id": 1}})

Q11) Revise the previous query to show the result for students with IDs between 10 and 12.
Ans) db.grades.find({"student_id": {"$gte": 10, "$lte": 12}}, {"student_id": 1, "class_id": 1, "_id": 0}).sort({"student_id": -1, "class_id": 1})
OR db.grades.aggregate([{"$match": {"student_id": {"$gte": 10, "$lte": 12}}}, {"$sort": {"student_id": -1, "class_id": 1}}, {"$project": {"_id": 0, "student_id": 1, "class_id": 1}}])

Q12) Show only existing class IDs in the grades collection. (Do not show duplicates.)
Ans) db.grades.distinct("class_id")

Q13) Write a query to group the type of scores and display the total types in each student document
Ans)

Q14) Write a query to show the maximum and the minimum class ID for each grade student. Sort the result based on student ID from low to high. Show only the first 10 grades student.
Ans)

Q15) Write a query to find the number of failed exams for student with ID 48.
Ans)

Q16) Write a query to multiply the list price by 1000 and display the given list price in products collection and the newly calculated list price.
Ans)

Q17) Write a query to find how many years each employee has worked in the company
Ans) 

Q18) Write a query to display existing email and newly created email of combining first 2 characters of first name and last name together as f2.lastname@seneca.ca in employees collection.
Ans)

Q19) Write a query to display the list price of products collect and using conditional operator display a discount of $100 if the list price of products collection is above $400 and or else $0 otherwise.
Ans)